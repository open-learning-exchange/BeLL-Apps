#!/usr/bin/env node

/**
 * Module dependencies.
 */

var sys = require('sys')
var fs = require('fs')
var exec = require('child_process').exec;
var program = require('commander');
var databases = []
program
    .version('0.0.2')
    .parse(process.argv);
if (!program.args[0]) return console.log('No CouchDB URL provided. Quiting now.')
var couchUrl = program.args[0]
var nano = require('nano')(couchUrl)

function start() {
    increaseLimits()
}

// Increase Limits so couchapp push works correctly
function increaseLimits() {
    exec('sudo launchctl limit maxfiles 150056 150056', function doneWithLaunchCtl() {
        exec('sudo ulimit -n 150056', function doneWithUlimit() {
            return getListOfDatabases()
        })
    })
}

function getListOfDatabases() {
    fs.readdir('./databases', function doneReadDir(err, files) {
        files.forEach(function addFile(element, index, array) {
            databases.push(element.substr(0, element.length - 3))
        })
        installDatabases()
    })
}

var a = 0

function installDatabases() {
    var database = databases[a]
    if (a !== databases.length) {
        console.log("creating database " + database)
        nano.db.create(database, function(err, body) {
            if (err && err.error !== "file_exists") console.log(err)
            a++
            return installDatabases()
        })
    } else {
        return installDesignDocs()
    }
}

var b = 0

function installDesignDocs() {
    var database = databases[b]
    if (b !== databases.length) {
        if (database != "communities" && database != "languages" && database != "configurations") {
            console.log("Inserting design docs for the " + database + " database")
            exec('node_modules/.bin/couchapp push ./databases/' + database + '.js ' + couchUrl + '/' + database, function(error, stdout, stderr) {
                if (error) console.log(error);
                if (stderr) console.log(stderr);
                console.log(stdout)
                b++
                installDesignDocs()
            })
        } else {
            b++
            installDesignDocs()
        }
    } else {
        createDefaultAdminMember()
        //createLanguages();
    }
}

function createDefaultAdminMember() {
    nano.db.get('members', function(err, body) {
        if (err) console.log(err)
        // Cancel if there are already members in the database
        if (body.doc_count > 1) return done()
        console.log('Creating a default admin member of admin:password')
        var members = nano.db.use('members')
        var defaultAdminMember = {
            "login": "admin",
            "kind": "Member",
            "roles": ["Manager", "SuperManager"],
            "firstName": "Default",
            "lastName": "Admin",
            "password": "password",
            "Gender": "Male",
            "status": "active",
            "email": "admin.somalia@olebell.org",
            "visits": 0
        }
        var configurationsDoc = {
            "name": "olesomalia",
            "nationName": "olenation",
            "code": "so",
            "type": "nation",
            "nationUrl": "olenation.cloudant.com",
            "version": "0.10.0",
            "notes": "this is testing .....asdf",
            "availableLanguages": ["English", "French", "Arabic", "Urdu"],
            "currentLanguage": "English"
        };
        /* var languagesDoc = {
         "Dashboard": "ڈیش بورڈ",
         "Library": "لائبریری",
         "Courses": "کورسز",
         "Meetups": "اجلاس",
         "Members": "اراکین",
         "Reports": "رپورٹیں",
         "Feedback": "آپ کی رائے",
         "Logout": "لاگ آؤٹ",
         "Badges": "بلے",
         "Calender": "کیلنڈر",
         "Email": "ای میل",
         "Update_Welcome_Video": "اپ ڈیٹ  خوش آمدید ویڈیو",
         "Community": "کمیونٹی",
         "Nation": "قوم",
         "Bell": "بیل",
         "Manager": "مینیجر",
         "Super_Manager": "سپر مینیجر",
         "Leader": "لیڈر",
         "Learner": "طالب علم",
         "Visits": "دورے",
         "Days": [
         {
         "Sunday": "اتوار",
         "Monday": "پیر",
         "Tuesday": "منگل",
         "Wednesday": "بدھ",
         "Thursday": "جمعرات",
         "Friday": "جمعہ",
         "Saturday": "ہفتہ"
         }
         ],
         "Months": [
         {
         "January": "جنوری",
         "February": "فروری",
         "March": "مارچ",
         "April": "اپریل",
         "May": "مئی",
         "June": "جون",
         "July": "جولائی",
         "August": "اگست",
         "September": "ستمبر",
         "October": "اکتوبر",
         "November": "نومبر",
         "December": "دسمبر"
         }
         ],
         "nameOfLanguage": "Urdu",
         "e_Readers": "ای قارئین",
         "News_Feed": "خبریں",
         "My_Library": "میری لائبریری",
         "My_Courses_Progress": "میرے کورسز پیش رفت",
         "My_Tutors": "میرا ٹیوٹر",
         "My_Meetups": "میری میٹنگ",
         "Member": "ممبر",
         "Login": "لاگ ان",
         "Password": " پاس ورڈ",
         "Sign_In": "سائن ان کریں",
         "Become_a_member": "رکن بنیے",
         "My_Home": "صفحہ اول",
         "Welcome": " خوش آمدید",
         "Functionality_Under_Construction": "یہ فعالیت زیر تعمیر ہے",
         "Add_new_Resource": "نئے ریسورس  شامل کریے",
         "Search": "تلاش کریں",
         "Collection": "مجموعہ",
         "Resources": "ريسورسس",
         "Title": "عنوان",
         "action": "کارروائی",
         "year": "سال",
         "media": "میڈیا",
         "language": "زبان",
         "subject": "مضمون",
         "level": "درجہ",
         "publisher_attribution": "پبلیشر /  نسبت",
         "link_to_license": "لائسنس کے لئے لنک",
         "resource_for": "ريسورس کے لئے",
         "author": "مصنف",
         "Request_Resource": "درخواست براےء ريسورس",
         "Back": "پیچھے",
         "Next": "اگلا",
         "Home": "ہوم",
         "resource_type": "ريسورس کی قسم",
         "Open": "کھولیں",
         "View": "دیکھیں",
         "Details": "تفصیلات",
         "Add_to_my_library": "میری لائبریری میں شامل کریں",
         "Delete": "حذف",
         "Hide": "چھپائیں"
         };
         var englishLangDoc={
         "Dashboard": "My Home",
         "Library": "Library",
         "Courses": "Courses",
         "Meetups": "Meetups",
         "Members": "Members",
         "Reports": "Reports",
         "Feedback": "Feedback",
         "Logout": "Logout",
         "Badges": "Badges",
         "Calender": "Calendar",
         "Email": "Email",
         "Update_Welcome_Video": "Update Welcome Video",
         "Nation": "Nation",
         "Community": "Community",
         "Manager": "Manager",
         "Super_Manager": "Super Manager",
         "Leader": "Leader",
         "Bell": "Bell",
         "Learner": "Learner",
         "Visits": "Visits",
         "Days": [
         {
         "Sunday": "Sunday",
         "Monday": "Monday",
         "Tuesday": "Tuesday",
         "Wednesday": "Wednesday",
         "Thursday": "Thursday",
         "Friday": "Friday",
         "Saturday": "Saturday"
         }
         ],
         "Months": [
         {
         "January": "January",
         "February": "February",
         "March": "March",
         "April": "April",
         "May": "May",
         "June": "June",
         "July": "July",
         "August": "August",
         "September": "September",
         "October": "October",
         "November": "November",
         "December": "December"
         }
         ],
         "nameOfLanguage": "English",
         "e_Readers": "e-Readers",
         "My_Courses_Progress": "My Courses Progress",
         "My_Library": "My Library",
         "My_Meetups": "My Meetups",
         "My_Tutors": "My Tutors",
         "News_Feed": "News Feed",
         "Member": "Member",
         "Login": "Login",
         "Password": "Password",
         "Sign_In": "Sign In",
         "Become_a_member": "Become a Member",
         "My_Home": "My Home",
         "Welcome": "Welcome",
         "Functionality_Under_Construction": "This Functionality is under construction.",
         "Search": "Search",
         "Collection": "Collection",
         "Resources": "Resouces",
         "Title": "Title",
         "action": "Action",
         "year": "Year",
         "media": "Media",
         "language": "Language",
         "subject": "Subject(s)",
         "level": "Level(s)",
         "publisher_attribution": "Publisher/Attribution",
         "link_to_license": "Link to License",
         "resource_for": "Resource For",
         "resource _type": "Resource Type",
         "author": "Author",
         "Request_Resource": "Request Resource",
         "Back": "Back",
         "Next": "Next",
         "Home": "Home",
         "Open": "Open",
         "View": "View",
         "Details": "Details",
         "Delete": "Delete",
         "Hide": "Hide",
         "Add_to_my_library": "Add to My Library",
         "Add_new_Resource": "Add New Resource"
         };*/
        members.insert(defaultAdminMember, function(err, res) {
            if (err)
                return console.log(err)
            else {
                var configurations = nano.db.use('configurations');
                configurations.insert(configurationsDoc, function(err, res) {
                    if (err) {
                        console.log(err);
                    } else {
                        var languages = nano.db.use('languages');
                        console.log("******************Going to insert document into languages database*******************************");
                        var langEngDocPath = 'init_docs/languages.txt';
                        insertLanguagesDoc(langEngDocPath);
                        langEngDocPath = 'init_docs/languages-Urdu.txt';
                        insertLanguagesDoc(langEngDocPath);
                        langEngDocPath = 'init_docs/languages-Arabic.txt';
                        insertLanguagesDoc(langEngDocPath);
                        /* var langEngDocPath = 'init_docs/languages.txt';
                         var langUrduDocPath = 'init_docs/languages-Urdu.txt';
                         insertLanguagesDoc(langEngDocPath);
                         insertLanguagesDoc(langUrduDocPath);*/
                    }
                });
            }

            done()
        })
    })
}
function insertLanguagesDoc(docPath) {
    var languages = nano.db.use('languages');
    fs.readFile(docPath, function (err, data) {
        languages.insert(data, function (err, res) {
            if (err) {
                console.log(err);
            } else {
                console.log("Languages doc inserted successfully.");
            }
        });



    });
}

/*function createLanguages() {
 // Cancel if there are already lagug in the database
 //if (body.doc_count > 1) return done()
 console.log('Creating languages list in the database.')
 var languages = nano.db.use('languages');
 var english = {
 "name":"English",
 "type":"languageDoc"
 };
 var spanish = {
 "name":"Spanish",
 "type":"languageDoc"
 };
 var portuguese = {
 "name":"Portuguese",
 "type":"languageDoc"
 };
 var french = {
 "name":"French",
 "type":"languageDoc"
 };
 var russian = {
 "name":"Russian",
 "type":"languageDoc"
 };
 var chinese = {
 "name":"Chinese",
 "type":"languageDoc"
 };
 var arabic = {
 "name":"Arabic",
 "type":"languageDoc"
 };
 var hindi = {
 "name":"Hindi",
 "type":"languageDoc"
 };
 var urdu = {
 "name":"Urdu",
 "type":"languageDoc"
 };
 var punjabi = {
 "name":"Punjabi",
 "type":"languageDoc"
 };
 var nepali = {
 "name":"Nepali",
 "type":"languageDoc"
 };
 var swahili = {
 "name":"Swahili",
 "type":"languageDoc"
 };
 var somali = {
 "name":"Somali",
 "type":"languageDoc"
 };
 var kyrgyzstani = {
 "name":"Kyrgyzstani",
 "type":"languageDoc"
 };
 var asante = {
 "name":"Asante",
 "type":"languageDoc"
 };
 var ewe = {
 "name":"Ewe",
 "type":"languageDoc"
 };
 var languagesList = [];
 languagesList.push(english);
 languagesList.push(spanish);
 languagesList.push(portuguese);
 languagesList.push(french);
 languagesList.push(russian);
 languagesList.push(chinese);
 languagesList.push(arabic);
 languagesList.push(hindi);
 languagesList.push(urdu);
 languagesList.push(punjabi);
 languagesList.push(nepali);
 languagesList.push(swahili);
 languagesList.push(somali);
 languagesList.push(kyrgyzstani);
 languagesList.push(asante);
 languagesList.push(ewe);
 for(var i = 0 ; i< languagesList.length ; i++) {
 languages.insert(languagesList[i], function(err, res) {
 if (err) {
 return console.log(err)
 }
 done()
 })
 }
 }*/

function done() {
    console.log('done!')
}

//
// Trigger Start 
//

start()