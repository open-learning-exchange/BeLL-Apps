{
  "name": "currently-unhandled",
  "version": "0.4.1",
  "description": "Track the list of currently unhandled promise rejections.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/jamestalmage/currently-unhandled"
  },
  "author": {
    "name": "James Talmage",
    "email": "james@talmage.io",
    "url": "github.com/jamestalmage"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "xo && nyc ava"
  },
  "files": [
    "index.js",
    "core.js",
    "browser.js"
  ],
  "keywords": [
    "unhandled",
    "unhandledRejection",
    "rejected",
    "promises"
  ],
  "dependencies": {
    "array-find-index": "^1.0.1"
  },
  "devDependencies": {
    "ava": "^0.15.1",
    "bluebird": "^3.4.0",
    "browserify": "^13.0.1",
    "coveralls": "^2.11.9",
    "delay": "^1.3.1",
    "is-ci": "^1.0.8",
    "karma": "^0.13.22",
    "karma-browserify": "^5.0.5",
    "karma-chrome-launcher": "^1.0.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.0.1",
    "mocha": "^2.5.3",
    "nyc": "^6.4.0",
    "watchify": "^3.7.0",
    "xo": "^0.15.0"
  },
  "browser": {
    "./index.js": "./browser.js"
  },
  "ava": {
    "files": "test.js"
  },
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ]
  },
  "xo": {
    "ignores": [
      "browser-bluebird-test.js"
    ],
    "envs": [
      "browser",
      "mocha",
      "node"
    ]
  },
  "readme": "# currently-unhandled [![Build Status](https://travis-ci.org/jamestalmage/currently-unhandled.svg?branch=master)](https://travis-ci.org/jamestalmage/currently-unhandled) [![Coverage Status](https://coveralls.io/repos/github/jamestalmage/currently-unhandled/badge.svg?branch=master)](https://coveralls.io/github/jamestalmage/currently-unhandled?branch=master)\n\n> Track the list of currently unhandled promise rejections.\n\n\n## Install\n\n```\n$ npm install --save currently-unhandled\n```\n\n\n## Usage\n\n```js\nconst currentlyUnhandled = require('currently-unhandled')(); // <- note the invocation\n\nvar fooError = new Error('foo');\nvar p = Promise.reject(new Error('foo'));\n\n// on the next tick - unhandled rejected promise is added to the list:\ncurrentlyUnhandled();\n//=> [{promise: p, reason: fooError}]'\n\np.catch(() => {});\n\n// on the next tick - handled promise is now removed from the list:\ncurrentlyUnhandled();\n//=> [];\n```\n\n## API\n\n### currentlyUnhandled()\n\nReturns an array of objects with `promise` and `reason` properties representing the rejected promises that currently do not have a rejection handler. The list grows and shrinks as unhandledRejections are published, and later handled.\n\n## Browser Support\n\nThis module can be bundled with `browserify`. At time of writing, it will work with native Promises in the Chrome browser only. For best cross-browser support, use `bluebird` instead of native Promise support in browsers.\n\n## License\n\nMIT Â© [James Talmage](http://github.com/jamestalmage)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/jamestalmage/currently-unhandled/issues"
  },
  "homepage": "https://github.com/jamestalmage/currently-unhandled",
  "_id": "currently-unhandled@0.4.1",
  "_from": "currently-unhandled@^0.4.1"
}
